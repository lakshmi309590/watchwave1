<%- include("../partial/userHeader") %>
<div class="container mt-4">
    <h3 class="mt-3" style="color: #046963; margin-bottom:70px">Edit User Address</h3>
    <form id="addressForm" method="POST" action="/editAddress?id=<%= address._id.toLocaleString() %>" class="border-0 p-3">
        <div class="row mb-50">
            <div class="form-group col-md-4">
                <label for="addressType">Address Type:</label>
                <input type="text" class="form-control border-3" value="<%= address.addressType %>" id="addressType" name="addressType" required>
                <span class="error-message" id="error-addressType"></span>
            </div>
            <div class="form-group col-md-4">
                <label for="name">Name:</label>
                <input type="text" class="form-control border-3" value="<%= address.name %>" id="name" name="name" required>
                <span class="error-message" id="error-name"></span>
            </div>
            <div class="form-group col-md-4">
                <label for="city">City:</label>
                <input type="text" class="form-control border-3" id="city" value="<%= address.city %>" name="city" required>
                <span class="error-message" id="error-city"></span>
            </div>
        </div>
        <div class="row mb-3">
            <div class="form-group col-md-4">
                <label for="landMark">Landmark:</label>
                <input type="text" class="form-control border-3" value="<%= address.landMark %>" id="landMark" name="landMark" required>
                <span class="error-message" id="error-landMark"></span>
            </div>
            <div class="form-group col-md-4">
                <label for="state">State:</label>
                <input type="text" class="form-control border-3" value="<%= address.state %>" id="state" name="state" required>
                <span class="error-message" id="error-state"></span>
            </div>
            <div class="form-group col-md-4">
                <label for="pincode">Pincode:</label>
                <input type="number" class="form-control border-3" value="<%= address.pincode %>" id="pincode" name="pincode" required>
                <span class="error-message" id="error-pincode"></span>
            </div>
        </div>
        <div class="row mb-3">
            <div class="form-group col-md-4">
                <label for="phone">Phone:</label>
                <input type="number" class="form-control border-3" id="phone" value="<%= address.phone %>" name="phone" required>
                <span class="error-message" id="error-phone"></span>
            </div>
            <div class="form-group col-md-4">
                <label for="altPhone">Alternate Phone:</label>
                <input type="number" class="form-control border-3" id="altPhone" value="<%= address.altPhone %>" name="altPhone" required>
                <span class="error-message" id="error-altPhone"></span>
            </div>
        </div>
        <button type="submit" id="submitButton" class="btn btn-primary">Submit</button>
    </form>
</div>

<script>
    document.getElementById('submitButton').addEventListener('click', function (event) {
        if (!validateForm()) {
            event.preventDefault();
        }
    });

    function validateForm() {
        let isValid = true;
        const requiredFields = ["addressType", "name", "city", "landMark", "state", "pincode", "phone", "altPhone"];

        // Clear all previous error messages
        document.querySelectorAll('.error-message').forEach(function(span) {
            span.textContent = '';
        });

        requiredFields.forEach(function (field) {
            const input = document.getElementById(field);
            if (input.value.trim() === "") {
                const errorSpan = document.getElementById('error-' + field);
                errorSpan.textContent = `Please fill out the ${field} field.`;
                isValid = false;
            }
        });

        if (!isValid) {
            return false;
        }

        const pincode = document.getElementById('pincode').value;
        const pincodePattern = /^[1-9][0-9]{5}$/;

        if (!pincodePattern.test(pincode)) {
            const errorSpan = document.getElementById('error-pincode');
            errorSpan.textContent = 'Pincode must be exactly 6 digits long and cannot start with 0.';
            isValid = false;
        }

        const phonePattern = /^[1-9][0-9]{9}$/;

        const phone = document.getElementById('phone').value;
        if (!phonePattern.test(phone)) {
            const errorSpan = document.getElementById('error-phone');
            errorSpan.textContent = 'Phone number must be exactly 10 digits long and cannot start with 0.';
            isValid = false;
        }

        const altPhone = document.getElementById('altPhone').value;
        if (!phonePattern.test(altPhone)) {
            const errorSpan = document.getElementById('error-altPhone');
            errorSpan.textContent = 'Alternate phone number must be exactly 10 digits long and cannot start with 0.';
            isValid = false;
        }

        const name = document.getElementById('name').value;
        if (!containsCharacterOrNumber(name)) {
            const errorSpan = document.getElementById('error-name');
            errorSpan.textContent = 'Name should contain alphabetic characters.';
            isValid = false;
        }

        const city = document.getElementById('city').value;
        if (!containsCharacterOrNumber(city)) {
            const errorSpan = document.getElementById('error-city');
            errorSpan.textContent = 'City should contain alphabetic characters.';
            isValid = false;
        }

        const landMark = document.getElementById('landMark').value;
        if (!containsCharacterOrNumber(landMark)) {
            const errorSpan = document.getElementById('error-landMark');
            errorSpan.textContent = 'Landmark should contain alphabetic characters.';
            isValid = false;
        }

        return isValid;
    }

    function containsCharacterOrNumber(input) {
        const pattern = /[a-zA-Z]/;
        return pattern.test(input);
    }
</script>

<%- include("../partial/footer") %>
