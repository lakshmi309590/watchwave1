<%- include("../partial/userHeader") %>
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Order Detail</title>
    <link rel="stylesheet" href="path/to/your/css/styles.css">
    <script src="https://cdn.jsdelivr.net/npm/sweetalert2@10"></script>
    <style>
        .custom-btn {
            background-color: #4CAF50; /* Green */
            border: none;
            color: white;
            padding: 10px 20px;
            text-align: center;
            text-decoration: none;
            display: inline-block;
            font-size: 16px;
            margin: 4px 2px;
            cursor: pointer;
            border-radius: 4px;
        }
    </style>
</head>
<body>
    <main class="container">
        <section class="content-main">
            <div class="content-header">
                <div class="mt-50">
                    <h2 class="content-title card-title">Order detail</h2>
                    <p>Details for Order ID: <%= orders._id %></p>
                </div>
            </div>
            <div class="card mt-60">
                <header class="card-header">
                    <div class="row align-items-center">
                        <div class="col-lg-4 col-md-4 ms-auto text-md-end">
                            <% if (orders.status !== "Canceled") { %>
                                <% if (orders.status === "Delivered") { %>
                                    <div class="row">
                                        <div class="col-1" style="margin-right: 40px;">
                                            <a class="btn custom-btn" id="print-button">Invoice</a>
                                        </div>
                                        <div class="col-4" style="margin-top: 17px; margin-left: 50px;">
                                            <h4 class="text-success">Delivered</h4>
                                        </div>
                                        <div class="col-2" style="margin-top: 17px; margin-left: 50px;">
                                            <button class="custom-btn" onclick="requestReturn('<%= orders._id %>')">Request Return</button>
                                        </div>
                                    </div>
                                <% } else if (orders.status === "Returned") { %>
                                    <h4 class="text-warning">Returned</h4>
                                <% } else if (orders.status === "Payment Pending")  { %>
                                    <div class="row">
                                        <div class="col-5" style="margin-top: 17px; margin-left: 50px;">
                                            <h6 class="text-warning">Pending</h6>
                                        </div>
                                        <div class="col-2" style="margin-right: 40px;">
                                            
                                            <button class="btn custom-btn" id="retryPaymentBtn" data-order-id="<%= orders._id %>">Retry Payment</button>

                                        </div>
                                        
                                    </div>
                                <% } else { %>
                                    <button class="custom-btn" onclick="cancelOrder('<%= orders._id %>')">Cancel Order</button>
                                <% } %>
                            <% } else { %>
                                <h4 class="text-danger">Cancelled</h4>
                            <% } %>
                        </div>
                    </div>
                </header>
            </div>
            
            <div class="card-body">
                <div class="row mb-50 mt-20 order-info-wrap background-info">
                    <div class="col-md-4">
                        <article class="icontext align-items-start ml-130">
                            <span class="icon icon-sm rounded-circle bg-primary-light">
                                <i class="material-icons text-primary person"></i>
                            </span>
                            <div class="text">
                                <h6 class="mb-1">Customer</h6>
                                <p class="mb-1">
                                    <%= orders.address[0].name %> <br>
                                    <%= orders.address[0].phone %>
                                </p>
                            </div>
                        </article>
                    </div>
                    <div class="col-md-4">
                        <article class="icontext align-items-start ml-130">
                            <span class="icon icon-sm rounded-circle bg-primary-light">
                                <i class="text-primary material-icons md-local_shipping"></i>
                            </span>
                            <div class="text">
                                <h6 class="mb-1">Order info</h6>
                                <p class="mb-1">
                                    <% if (locals.orders) { %>
                                        Pay method: <%= orders.payment %> <br> Status:
                                        <% if (orders.status == "Payment Pending") { %>
                                            Pending
                                        <% } else if (orders.status == "Delivered") { %>
                                            Delivered
                                        <% } else if (orders.status == "Confirmed") { %>
                                            Confirmed
                                        <% } else if (orders.status == "Returned") { %>
                                            Returned
                                        <% } else if (orders.status == "Canceled") { %>
                                            Cancelled
                                        <% } else if (orders.status == "Shipped") { %>
                                            Shipped
                                        <% } %>
                                    <% } %>
                                </p>
                            </div>
                        </article>
                    </div>
                    <div class="col-md-4">
                        <article class="icontext align-items-start ml-130">
                            <span class="icon icon-sm rounded-circle bg-primary-light">
                                <i class="text-primary material-icons md-place"></i>
                            </span>
                            <div class="text">
                                <h6 class="mb-1">Deliver to</h6>
                                <p class="mb-1">
                                    Address: <%= orders.address[0].landMark %>, <%= orders.address[0].city %> <br>
                                    <%= orders.address[0].state %>, <%= orders.address[0].addressType %> <br>
                                    <%= orders.address[0].pincode %>
                                </p>
                            </div>
                        </article>
                    </div>
                </div>
                <div class="row">
                    <div class="col-lg">
                        <div class="table-responsive">
                            <table class="table">
                                <thead>
                                    <tr class="text-center bg-light">
                                        <th width="30%">Product</th>
                                        <th width="20%">Name</th>
                                        <th width="20%">Unit Price</th>
                                        <th width="10%">Quantity</th>
                                        <th class="text-center" width="10%">Amount</th>
                                        <th width="20%">Discount</th>
                                        <th class="text-center" width="20%" class="text-end">Total</th>
                                    </tr>
                                </thead>
                                <tbody>
                                 
                                    <tbody>
                                        <%if(locals.orders){%>
                                            <% let orderId; %>
                                                <% for (let i=0; i < orders.product.length; i++) { %>
                                                    <tr>
                                                        <td class="text-center">
                                                            <a class="itemside" href="#">
                                                                <div class="left">
                                                                    <img src="/uploads/product-images/<%= orders.product[i].image %>"
                                                                        style="height: 7rem; width: 7rem;" class="img-xs"
                                                                        alt="Item">
                                                                </div>
                                                            </a>
                                                        </td>
                                                        <td class="text-center">
                                                            <div class="info">
                                                                <%= orders.product[i].name || orders.product[i].title %>
                                                            </div>
                                                        </td>
                                                        <td class="text-center">
                                                            â‚¹<%= orders.product[i].price.toLocaleString() %>
                                                        </td>
                                                        <td class="text-center">
                                                            <%= orders.product[i].quantity %>
                                                        </td>
                                                        <td class="text-center">
                                                            â‚¹<%= (parseInt(orders.product[i].price) *
                                                                parseInt(orders.product[i].quantity)).toLocaleString() %>
    
                                                        </td>
    
    
                                                        <% } %>
    
                                                            <% let totalProductPrice=0; %>
                                                                <% for (let i=0; i < orders.product.length; i++) { %>
                                                                    <% totalProductPrice +=parseInt(orders.product[i].price)
                                                                        * parseInt(orders.product[i].quantity); %>
                                                                        <% } %>
    
    
                                                                            <% let discount=totalProductPrice -
                                                                                orders.totalPrice; %>
    
                                                                                <!-- Display discount and total price for the order -->
                                                                                <td class="text-center">
                                                                                    <%= discount.toLocaleString() %>
                                                                                </td>
    
                                                                                <td class="text-center">
                                                                                    â‚¹<%= orders.totalPrice.toLocaleString()
                                                                                        %>
                                                                                </td>
                                                    </tr>
    
    
                                                    <%}%>
    
                                                        <input type="hidden" name="" id="orderId" value="<%= orderId %>">
    
                                    </tbody>
                            </table>
                        </div>
                    </div>
                </div>
            </div>
        </section>
    </main>
    <script src="assets/js/vendors/jquery-3.6.0.min.js"></script>
    <script src="assets/js/vendors/bootstrap.bundle.min.js"></script>
    <script src="assets/js/vendors/select2.min.js"></script>
    <script src="assets/js/vendors/perfect-scrollbar.js"></script>
    <script src="assets/js/vendors/jquery.fullscreen.min.js"></script>
    <!-- Main Script -->
    <script src="assets/js/main.js" type="text/javascript"></script>
    <script src="https://checkout.razorpay.com/v1/checkout.js"></script>
    <script>
          document.getElementById('retryPaymentBtn').addEventListener('click', async () => {
    const retryOrderId = document.getElementById('retryPaymentBtn').getAttribute('data-order-id');
    await retryOrder(retryOrderId);
});

async function retryOrder(retryOrderId) {
    // Assuming you have access to an order object that has these properties
    const order = {
        address: '<%= orders.address %>',  // Replace with actual order data
        payment: '<%= orders.payment %>',  // Replace with actual order data
        totalPrice: '<%= orders.totalPrice %>'  // Replace with actual order data
    };

    const address = order.address;
    const payment = order.payment;
    const totalValue = order.totalPrice;

    if (!payment) {
        Swal.fire({
            title: 'NO PAYMENT FOUND!',
            text: 'Please select your Payment.',
            icon: 'error',
            timer: 3000,
        });
    } else if (!address) {
        Swal.fire({
            title: 'NO ADDRESS FOUND!',
            text: 'Please select your address.',
            icon: 'error',
            timer: 3000,
        });
    } else {
        try {
            const response = await $.ajax({
                url: '/orderPlaced',
                method: 'POST',
                data: {
                    totalPrice: totalValue,
                    addressId: address,
                    payment: payment,
                    retryOrderId: retryOrderId // Include the retryOrderId here
                }
            });
            handlePaymentResponse(response, retryOrderId, totalValue, address);
        } catch (error) {
            console.error("Order placement failed:", error);
            Swal.fire({
                title: "Order failed",
                text: "Something went wrong. Please try again.",
                icon: "error",
                showConfirmButton: true,
            });
        }
    }
}

function handlePaymentResponse(response, retryOrderId, totalValue, address) {

    if (response.method === "cod") {
        Swal.fire({
            title: "Order success",
            text: "Order placed successfully",
            icon: "success",
            showConfirmButton: false,
            timer: 2000,
        }).then(() => {
            location.href = '/profile';
        });
    } else if (response.method === "online") {
        let orderAmount = Math.round(totalValue * 100);
        var options = {
            "key": "rzp_test_V4SjL3cyWFkp1T",
            "amount": orderAmount,
            "currency": "INR",
            "name": "watchwave",
            "description": "Test Transaction",
            "image": "https://example.com/your_logo",
            "order_id": response.razorpayOrder.id,
            "handler": function (status) {
                verifyPayment(response.razorpayOrder.id, status, retryOrderId);
            },
            "prefill": {
                "name": address.name || " <%= orders.address[0].name %>",
                "email": address.email || " <%= orders.address[0].email %>",
                "contact": address.phone || " <%= orders.address[0].phone %>"
            },
            "theme": {
                "color": "#3399cc"
            }
        };
        var rzp1 = new Razorpay(options);
        rzp1.on('payment.failed', function (response) {
            handlePaymentFailure(response, retryOrderId, totalValue, address);
        });
        rzp1.open();
    } else if (response.method === "wallet") {
        if (response.payment === true) {
            Swal.fire({
                title: "Order success",
                text: "Order placed successfully",
                icon: "success",
                showConfirmButton: false,
                timer: 2000,
            }).then(() => {
                location.href = '/profile';
            });
        } else {
            Swal.fire({
                title: "Order failed",
                text: "Wallet amount is not enough",
                icon: "error",
                showConfirmButton: true,
            });
        }
    }
}

function handlePaymentFailure(response, orderId, totalValue, address) {
    console.error('Payment failed:', response);

    // Log payment failure details to the server
    $.ajax({
        url: '/logPaymentFailure',
        method: 'POST',
        data: {
            code: response.error.code,
            description: response.error.description,
            source: response.error.source,
            step: response.error.step,
            reason: response.error.reason,
            order_id: response.error.metadata.order_id,
            payment_id: response.error.metadata.payment_id,
            user_id: orderId,
            status: true,
            total_price: totalValue,
            address_id: address
        },
        success: (res) => {
            Swal.fire({
                title: "Payment failed",
                text: "Order still pending.",
                icon: "error",
                showConfirmButton: true,
            }).then(() => {
                location.href = '/profile';
            });
        }
    });

    // Save the order as pending
 
}

function verifyPayment(orderId, payment, id) {
    $.ajax({
        url: '/verifyPayment',
        method: 'post',
        data: {
            orderId,
            payment
        },
        success: (response) => {
            if (response.status) {
                Swal.fire({
                    title: "Order success",
                    text: "Order placed successfully",
                    icon: "success",
                    showCancelButton: true,
                    confirmButtonText: "View orders",
                    cancelButtonText: "Continue shopping",
                    reverseButtons: true
                }).then(function (result) {
                    if (result.value) {
                        location.href = '/profile';
                    } else if (result.dismiss === "cancel") {
                        location.href = '/'
                    }
                });
            } else {
                Swal.fire({
                    title: "Payment verification failed",
                    text: "Your payment could not be verified. Please try again.",
                    icon: "error",
                    showConfirmButton: true,
                });
            }
        },
        error: function (xhr, status, error) {
            console.error("Payment verification failed:", status, error);
            Swal.fire({
                title: "Payment verification failed",
                text: "Something went wrong. Please try again.",
                icon: "error",
                showConfirmButton: true,
            });
        }
    });
}
function cancelOrder(orderId) {
            Swal.fire({
                title: 'Are you sure?',
                text: "Do you really want to cancel this order?",
                icon: 'warning',
                showCancelButton: true,
                confirmButtonColor: '#d33',
                cancelButtonColor: '#3085d6',
                confirmButtonText: 'Yes, cancel it!'
            }).then((result) => {
                if (result.isConfirmed) {
                    window.location.href = `/cancelOrder?orderId=${orderId}`;
                }
            });
        }

        function requestReturn(orderId) {
            Swal.fire({
                title: 'Are you sure?',
                text: "Do you want to request a return for this order?",
                icon: 'warning',
                showCancelButton: true,
                confirmButtonColor: '#d33',
                cancelButtonColor: '#3085d6',
                confirmButtonText: 'Yes, request return!'
            }).then((result) => {
                if (result.isConfirmed) {
                    window.location.href = `/requestReturn?orderId=${orderId}`;
                }
            });
        }

        document.querySelectorAll('.custom-btn').forEach(button => {
            button.addEventListener('click', () => {
                const orderId = document.getElementById('orderId').value;
                const buttonText = button.innerText.trim();

                if (buttonText === 'Cancel Order') {
                    cancelOrder(orderId);
                } else if (buttonText === 'Request Return') {
                    requestReturn(orderId);
                }
            });
        });
    </script>
    <script>
        function tracking() {
            Swal.fire({
                title: '<strong><u>ORDER DETAILS</u></strong>',
                html: 
          <div class="modal-body">
            <div class="progress-track">
              <ul id="progressbar">
                <li class="step0 active " id="step1">Order placed</li>
                <li class="step0 active text-center" id="step2">In Transit</li>
                <li class="step0 active text-right" id="step3"><span>Out for Delivery</span></li>
                <li class="step0 text-right" id="step4">Delivered</li>
              </ul>
            </div>
          </div>
        ,
            });
        }


        function printInvoice(event){
            window.print()
        }
       document.getElementById("print-button").addEventListener('click',printInvoice);
    </script>
</body>
